name: Run Go Tests

on:
  push:
    branches: [ main, deploy ]
  pull_request:
    branches: main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Docker Compose
        run: |
          DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
          mkdir -p $DOCKER_CONFIG/cli-plugins
          curl -SL https://github.com/docker/compose/releases/download/v2.24.7/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
          chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
          docker compose version

      - name: Build minifylink container
        run: docker compose build minifylink

      - name: Start container
        run: docker compose up -d minifylink

      - name: Wait for container to start
        run: |
          TIMEOUT=30
          INTERVAL=5
          START_TIME=$(date +%s)
          
          while ! docker ps | grep -q minifylink; do
            if (( $(date +%s) - START_TIME >= TIMEOUT )); then
              echo "Контейнер не запустился за отведенное время"
              docker ps
              exit 1
            fi
            echo "Ожидание запуска контейнера..."
            sleep $INTERVAL
          done
          echo "Контейнер запущен"

      - name: Run tests
        run: docker exec -t minifylink sh -c "cd /app && go test -v ./... -cover"

      - name: Generate coverage report
        if: success()
        run: |
          mkdir -p coverage
          docker exec -t minifylink sh -c "cd /app && go test -coverprofile=/app/coverage.out ./..."
          docker cp minifylink:/app/coverage.out ./coverage/

      - name: Upload coverage report
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

      - name: Print container logs on failure
        if: failure()
        run: docker logs minifylink
