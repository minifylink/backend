version: '3.9'

networks:
  internal_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
  nginx_proxy:
    driver: bridge
  app_network:
    name: app_network

services:
  postgres:
    build:
      context: .
      dockerfile: docker/Dockerfile.postgres
    container_name: postgres
    restart: always
    env_file:
      - .env
    environment:
      PGDATA: /var/lib/postgresql/data
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-shortener}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      internal_net:
        aliases:
          - postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-shortener}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - "5432:5432"

  minifylink:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: minifylink
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - CONFIG_PATH=/app/config/prod.yaml
      - VIRTUAL_HOST=82.202.140.205,localhost
      - VIRTUAL_PORT=8082
    volumes:
      - ./config:/app/config
      - ./.env:/app/.env
    networks:
      app_network:
      internal_net:
      nginx_proxy:
        aliases:
          - minifylink
    expose:
      - "8082"
    ports:
      - "8082:8082"
    healthcheck:
      test: [ "CMD-SHELL", "wget -q --spider http://localhost:8082/healthy || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  nginx_external:
    build:
      context: .
      dockerfile: docker/Dockerfile.nginx
    container_name: nginx_external
    ports:
      - "80:80"
      - "443:443"
    networks:
      - app_network
    depends_on:
      - minifylink
    healthcheck:
      test: [ "CMD-SHELL", "curl http://localhost/healthy || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

volumes:
  postgres_data:
    driver: local
  certs:
  vhost:
  html:
